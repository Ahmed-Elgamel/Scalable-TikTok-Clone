version: '3.8'

services:

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
#      - CASSANDRA_USER=admin
#      - CASSANDRA_PASSWORD=admin
      - MAX_HEAP_SIZE=4G
      - HEAP_NEWSIZE=800M
      - CASSANDRA_CLUSTER_NAME=NewsfeedCluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
#      - CASSANDRA_BROADCAST_ADDRESS=cassandra  # or the container hostname
#      - CASSANDRA_LISTEN_ADDRESS=cassandra
#      - CASSANDRA_RPC_ADDRESS=0.0.0.0
    volumes:
      - cassandra_data:/var/lib/cassandra
    networks:
      - cassandra-net
#######################################################################################################################################
  cassandra-init:
    image: cassandra:latest
    depends_on:
      - cassandra
    volumes:
      - ./News-Feed-Service/init.cql:/init.cql
    entrypoint: [ "sh", "-c", "sleep 30 && cqlsh cassandra -f /init.cql" ]
    networks:
      - cassandra-net
#######################################################################################################################################
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - message-queue-network
#######################################################################################################################################
  kafka:
    image: bitnami/kafka:2.7.0  # Older version of Kafka that uses Zookeeper
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - message-queue-network
#######################################################################################################################################
  mongodb:
    image: mongo
    container_name: mongo-container
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: video_metadata_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data
    networks:
      - mongodb-network
#######################################################################################################################################
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks:
      - mongodb-network
#######################################################################################################################################
  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"   # API port
      - "9001:9001"   # Web UI
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - minio-network
#######################################################################################################################################
  video-ms:
    image: video-ms:latest
    build:
      context: ./VideoService
      dockerfile: Dockerfile
    container_name: video-ms-container
    ports:
      - "8080:8080"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_ENDPOINT: http://minio:9000
    depends_on:
      - minio
      - kafka
      - cassandra
    networks:
      - minio-network
      - mongodb-network
      - message-queue-network
#######################################################################################################################################
  newsfeed-ms:
    image: newsfeed-ms:latest
    build:
      context: ./News-Feed-Service
      dockerfile: Dockerfile
    container_name: newsfeed-ms-container
    ports:
      - "8082:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_CASSANDRA_CONTACT_POINTS: cassandra
      SPRING_DATA_CASSANDRA_PORT: 9042
      SPRING_DATA_CASSANDRA_KEYSPACE_NAME: testKeySpace
    depends_on:
      - kafka
      - cassandra
    networks:
      - message-queue-network
      - cassandra-net
#######################################################################################################################################
volumes:
  minio_data:
  mongodb_data:
  cassandra_data:
#######################################################################################################################################
networks:
  minio-network:
    driver: bridge
  mongodb-network:
    driver: bridge
  message-queue-network:
    driver: bridge
  cassandra-net:
    driver: bridge



